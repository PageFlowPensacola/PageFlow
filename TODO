- investigate connection pooling, transactional integrity

## BEFORE MOVING TO PRODUCTION

Enforce ip restrictions for login
add user_org joins to relevant queries to authorize user has access to this org - NOW DOMAIN-oriented

## ENHANCEMENTS

Return actual minified thumbnails.
Manage broken/non PDF submissions

## Interface

Pagination of template pages
		Page size display in analysis
			smaller with flexbox click dlg cursor zoom-in
(enhancement) Ability to hide audit rect result display
	(done on backend)
Indicate the page number inset

##### Misc

Add new signatory in Rect Dlg
Exclusion Index Constraint on Audit Rects via Postgres
[PostGIS](https://en.wikipedia.org/wiki/PostGIS)
Style Dialog

## Pale Image Detection
Some scans are turning out too pale for useful transition detection. Others may end up too dark. Need to determine a threshold of darkness to recognize a transition (currently using 128).

Possibilities: Take the average() of the entire image; take the min() and max() and split the difference; do all of the above based on the bounding box.

Also may be worth using a percentile check. Find the pixel value such that 99% of the image is darker than it, and one such that 99% is lighter than it. Half way between those is our transition point (or other figures than 99%).

Alternatively, define a transition not as "above" and "below" a fixed point, but as a sufficient delta from the previous pixel value.

What constitutes sufficient? What if it transitions slowly over several pixels? So maybe we need to consider a "low" and "high" "water mark" for each strip.

Getting threshold based on a single Tesseract makebox box
might be useful.


PDF Parsing.
https://www.adobe.com/devnet-docs/acrobatetk/tools/DigSig/Acrobat_DigitalSignatures_in_PDF.pdf
https://opensource.adobe.com/dc-acrobat-sdk-docs/pdfstandards/PDF32000_2008.pdf

##### Archive Migration

- ssl

1. User
   - Roles ( org-level admin, org-level user, suborg-level user )
   - 2fa - oauth with google or other account (Check with Frank on option to create google account)
   - audit trail - appendning toward append-only
   - impersonation
   - remember me
   - state preservation between logins (restore ui position on login)

2. Domain (formerly org)
   - Tree - root is pageflow
   - offer subdomains in org tree
   - remember as part of state preservation
   - domain-level module availability
   - Shipping labels
   - manifests

3. Document (dealjacket, template, mtr, etc)
   - upload
   - search
   - transactionality w/ aws
   - revisit aws structure
   - doctypes (dealjacket, financial, hr)

4. Search
   - full-text serch in postgres
   - future: advanced search

5. Pipeline - river
   - pdf processing
   - image processing
   - data munging
   - model management/training
   - data model?


## Logins
On login, assume for now tagtech userbase, get user details from MySql database and synchronize with psql db.
Eventually we would like TagTech to be one possibility in the user credentials, but that probably won't be sufficient.
Set everything else up accordingly.
Session Expiration
Update Favicon
Filter domain select to single level of child.

## July 10
Handle "MySQL server has gone away" exception

## July 11
Sort Signatories

## DATABASE
Deal with table updates where a new table depends on another new table

There seems to be a LOCK held when needs to be addressed.

### Something critically wrong. Failing to rollback after an exception.

## July 24, 2024
Develop a non-instrusive but distinguishing color palette
Previous analysis listing view
Define and list unmatched documents
	Train/Test Split on the matrix regression
		if it fails the test then it is an unmatched document.

## August 16
Decide whether or not to stick with StilleBot pgssl.pike approach
	and then decide how to manage json en/decoding.

## August 28
Interface for flagging miscategorized templates
Check for minimum word count on submission
Check for minimum word match btwn matched template and submission
Seed ML top level domain

## August 30
Export templates (for reimport after database resets) maybe?
Matrix numbers in parse page are nonsensical:
```
[5.81020938e+03 5.81020938e+03 2.61676057e+03 2.61676057e+03
 1.41833300e+00 1.41833300e+00]
 ```
 * Consider rescaling the 10% figure (img->width/10) by the X to X coordinate transform (matrix[0]) so we're working in template coordinates everywhere
 * Potential issue: Is the regression Python script errantly retaining state across calls?

## September 9
Analysis:
	* BUG: display clears leaving blank screen at end of last page
	* return pagecount and display it
	* wrap each template and contents in a summary details
		- summary should have, page count and green, yellow or red error level
	* move "reanalyze" button to below thumbnail
	* layout of page analysis results
	* "click list item to the left..." display
	* filter out error-free template docs
	* display template pages expected count

## Sept 12
### Potential Optimizations
 * Filter ocr text against dictionary (eg `/usr/share/dict/words`)
  - Domain-specific dictionary for words like VIN
	- This could be dynamic based on Template words
	- Exclude non-alphanumeric maybe
	- Cost seems to come from number of distinct words in a template
		but RARE words are probably the most interesting
	- We are not disabling accent stripping
```pike
array words = Standards.JSON.decode(Stdio.read_file("ocr_data1.json"));
multiset dict = (multiset)(Stdio.read_file("/usr/share/dict/words") / "\n" - ({""}));
gauge {werror("Words: %O\n", sizeof(filter(words) {return dict[__ARGS__[0]->text];}));};
```

## Sept 17
### Possible changes to the feature selection for consideration in the future
- Any word that contains a mix of letters and digits gets the digits folded to letters
  Would reduce feature count by fixing OCR issues
- Increase ngram count (even to 5) if performance permits
- Add positional information by mapping the word to its ordinal as well as its count
	* This might involve giving River a dict as opposed to BagOfWords
- Stem the words (remove prefixes/suffixes). Would need some language recognition; start
  with a dictionary and turn it into a replaceset.

## Sept 18
### Possible useful API for parsing PDFs
https://www.cambioml.com

## Sept 23
Template Package concept to require specific documents to be present,
	potentially based on parameters within other documents.
	eg: any pre-1972 home sold requires a "lead paint disclosure"
	 1. Upload Template of the document (proforma)
	 2. Define audit rects
	 3. Upload a file for verification
	  Default to assuming all audit rects are mandatory
		Can add new ruleset, but each Template has a
			default ruleset.
		Ruleset is a database concept.

 * Define a rule by how it gets evaluated.
	- define a set of possible things we can check for
	eg:
		-- comparison gt, lt, eq, etc...;
		-- set completion (split gives two different rules: optional and mandatory set completion);
		-- require - an aspect of the rule that says require xyz.
		---- borrow a thing from EU4 checks and exes making their way down the tree
 * Also define a rule by how it gets edited.
 * Everything else will take care of itself (grammar parser)

 Start with a rule executor which will get more and more powerful, stored as json but represented in various ways to the user.

Store rule in jsonb so will need to manually code out parsing of rule validation as can't use db for it.
Copy/Clone and modify template packages.
